{
  "hash": "e2564444b224b37b88090156d10bde24",
  "result": {
    "markdown": "---\ntitle: \"Data distributions\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: {.callout-tip}\n## Learning outcomes\n\n**Questions**\n\n-\n-\n\n**Objectives**\n\n-\n-\n-\n:::\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n### Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(visdat)\n```\n:::\n\n\n### Functions\n\n## Python\n\n### Libraries\n### Functions\n:::\n:::\n\n## Data distributions\n\nWe've looked at some patterns in our data, using the `life_expectancy` variable as an example.\n\nWe might want to understand this variable a bit better, so we need to look at it a bit more closely. A way of doing this is to see how life expectancy is distributed. We already noticed that life expectancy levels off, but perhaps there is more in these data than we already know.\n\n\n### Loading data\n\nIf you haven't done so yet, please load the data as follows:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder <- read_csv(\"data/gapminder_clean.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 167 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): country, world_region, income_groups, main_religion\ndbl (8): year, children_per_woman, life_expectancy, income_per_person, popul...\nlgl (1): is_oecd\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Python\n:::\n\n### Boxplots\n\nAn easy way to get a sense of how your data are distributed is to create a box plot:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder,\n       aes(y = life_expectancy)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](data-distributions_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Python\n:::\n\n### Histograms\n\nAnother way is to create a histogram, where we slice our data into intervals (for example, in 5 year chunks e.g. 35-40 years, 40-45 years etc) and count how many observations fall into each interval.\n\n::: {.panel-tabset group=\"language\"}\n## R\n\nWe can do this quite straightforwardly by using `geom_histogram()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder,\n       aes(x = life_expectancy)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](data-distributions_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWhen you run this bit of code it gives you some information:\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\nWhat this means is that it chopped our data into 30 chunks/intervals and done the counting based on that. This might not be what we want and we can change this by changing the `bins` argument or using `binwidth`. The difference between the two is that with, for example, `bins = 10` we're saying \"chop the data into 10 equal chunks\" whereas with `binwidth = 10` we're saying \"chop the data into chunks of 10 years each\".\n\nTo illustrate that histograms can vary heavily depending on the bin size, look at the following plots:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder,\n       aes(x = life_expectancy)) +\n  geom_histogram(bins = 5) +\n  labs(title = \"bins = 5\")\n```\n\n::: {.cell-output-display}\n![](data-distributions_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(data = gapminder,\n       aes(x = life_expectancy)) +\n  geom_histogram(bins = 15) +\n  labs(title = \"bins = 15\")\n```\n\n::: {.cell-output-display}\n![](data-distributions_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n## Python\n:::\n\nHowever we slice the data, the largest number of countries with similar life expectancy seem to be in the 70-80 year range.\n\nThere is also one country where life expectancy is very low and if I'd see a plot like this I would definitely want to investigate that further!\n\n\n## Exercise\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n::: {.panel-tabset group=\"language\"}\n## R\n## Python\n:::\n:::\n\n## Key points\n\n::: {.callout-note}\n-\n-\n-\n:::\n",
    "supporting": [
      "data-distributions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}