{
  "hash": "d9cb409e7a0bd91af7a7aa150eb1b7a1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Grey is great\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: {.callout-tip}\n## Learning outcomes\n\n- Use the power of grey to your advantage\n- Use text as a visual\n\n:::\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n### Libraries\n### Functions\n\n## Python\n\n### Libraries\n### Functions\n:::\n:::\n\n## Purpose and aim\n\nWe have seen that [pop-outs](popout.qmd) can be very powerful to highlight parts of your data. We already played a bit with greying out some of the data, which moves it to the background.\n\nGenerally, grey scales are a very useful way of layering your data and emphasis. It's not just limited to your data points, but easily extends to any text annotations.\n\nWe'll explore this more below using the socioeconomic data from 1960 - 2010. To reduce the number of countries, we're only plotting data from country names contains \"stan\".\n\nWe will build up a fictional narrative as we go along.\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder1960_2010 <- read_csv(\"data/gapminder1960to2010_socioeconomic.csv\")\n```\n:::\n\n\nLets first extract the 'stans:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstans <- gapminder1960_2010 %>% \n  filter(str_detect(country, \"stan\"))\n```\n:::\n\n\nWe've got 6 countries in this data set. Let's say we wanted to build a narrative around Turkmenistan. There is quite some variability in the income data, indicating that perhaps there have been some economic events that have led to drops and rises in overall income.\n\nWe'll give Turkmenistan it's own category, so we can highlight it later.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstans <- stans %>% \n  mutate(is_turkmenistan = country == \"Turkmenistan\")\n```\n:::\n\n\nLet's create a plot that illustrates the income per person over the period 1960 - 2010.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(stans, aes(x = year,\n                  y = income_per_person,\n                  colour = country,\n                  group = country)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](grey_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n:::\n\nAs we mentioned earlier, Turkmenistan's income varies a lot over the period we're looking at here. So we delve into that a bit more.\n\nWe'll use the concept of **less is more**. Let's strip back as much of the information as we can and then build things up from there.\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(stans, aes(x = year, y = income_per_person, group = country)) +\n  geom_line(aes(colour = is_turkmenistan)) +\n  # remove background colour\n  # and gridlines\n  theme_classic() +\n  # change colour scheme\n  scale_colour_manual(values = c(\"grey\", \"firebrick\"))\n```\n\n::: {.cell-output-display}\n![](grey_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nNext, we can remove the legend (we'll add manual annotations later) and change the axis labels. We'll store this plot, so we can make further changes without having the copy all of the code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nturkmenistan <- ggplot(stans, aes(x = year, y = income_per_person, group = country)) +\n  geom_line(aes(colour = is_turkmenistan)) +\n  # remove background colour\n  # and gridlines\n  theme_classic() +\n  # change colour scheme\n  scale_colour_manual(values = c(\"grey\", \"firebrick\")) +\n  # remove legend\n  theme(legend.position = \"none\") +\n  labs(title = \"Income per person (Turkmenistan)\",\n       x = \"Year\",\n       y = \"Annual income per person (USD)\")\n\nturkmenistan\n```\n\n::: {.cell-output-display}\n![](grey_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n:::\n\n## Plot annotations\n\nNow that we have a decent starting point for the plot, we're going to annotate it further.\n\nThere is a marked decline in income between 1989 and 1995. Let's say our story involved the effect of the collapse of the USSR on 26-December 1991. We would then want to mark this on the plot.\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nturkmenistan +\n  geom_vline(xintercept = 1991, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](grey_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n:::\n\nThis particular line would be helpful if we wanted to make comparisons across the various countries. But in this case we're not and we are better off just indicating the point directly:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\nThis step is quite manual, so it's helpful to have the actual data available.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstans %>%\n  filter(country == \"Turkmenistan\" & year == 1991) %>% \n  select(income_per_person)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 Ã— 1\n  income_per_person\n              <dbl>\n1              7713\n```\n\n\n:::\n:::\n\n\nWe can plot this point now. We probably want to adjust our title too, based on what we're seeing!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nturkmenistan +\n  labs(title = \"Economic decline in Turkmenistan pre-dates fall of USSR\") +\n  # add a segment\n  annotate(geom = \"segment\", x = 1988, xend = 1991, y = 6400, yend = 7713,\n           arrow = arrow(type = \"closed\", length = unit(0.02, \"npc\"))) +\n  # add some text\n  annotate(geom = \"text\", x = 1984, y = 6600, label = \"Fall of USSR\")\n```\n\n::: {.cell-output-display}\n![](grey_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n:::\n\nUsing grey values like this allows you to guide your audience through your plot. All the data is still there, but you are emphasising particular points and trends.\n\nText itself is a very important visual component and one you should not be afraid of using. A plot often doesn't \"speak for itself\" and you want to make sure that people are not filling in the narrative themselves, but that they are directed by you!\n\n## Summary\n\n::: {.callout-tip}\n#### Key points\n\n- We can use grey to send information to the background\n- Grey allows us to layer our plot, guiding people through the plot\n:::\n",
    "supporting": [
      "grey_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}