{
  "hash": "5c4f2a966a420e3d05b8c760abeb290a",
  "result": {
    "markdown": "---\ntitle: \"Making data stand out\"\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: {.callout-tip}\n## Learning outcomes\n\n- Learn how to make some data stand out from the crowd\n\n:::\n\n## Libraries and functions\n\n::: {.callout-note collapse=\"true\"}\n## Click to expand\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n### Libraries\n### Functions\n\n## Python\n\n### Libraries\n### Functions\n:::\n:::\n\n## Purpose and aim\n\nOften we have to deal with large amounts of data. But even more often we want to draw the reader's attention to a particular property of the data that we're displaying. In these cases it can be useful to visually let your data stand out.\n\n## Loading data\n\nIf you haven't done so yet, please load the data as follows:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder <- read_csv(\"data/gapminder_clean.csv\")\n```\n:::\n\n\n## Python\n:::\n\n## The popout\n\nTo be honest, I'm not entirely sure if this is a word, but it's a technique that is often used in visualisation. Here we're colouring our data of interest in a highly contrasting way to the rest of the data, to make them \"pop out\".\n\nHave a look at the following plot, where we are plotting child mortality against the number of children per woman:\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder,\n       aes(x = children_per_woman,\n           y = child_mortality)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](popout_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Python\n:::\n\nIt looks like there is a strong positive correlation between the number of children per women and child mortality, since child mortality seems to increase as the number of children per woman is higher.\n\nIn our data set we have a variable called `is_oecd`, which contains `TRUE/FALSE` statements on whether a country is part of the [Organisation for Economic Co-operation and Development](https://www.oecd.org). This organisation stimulates economic progress and world trade and consists of primarily richer, Western countries.\n\nLet's say we wanted to explore if this possible correlation has something to do with the economic status of the country. If that's the case, it could be that child mortality rates in OECD countries is perhaps not linked to the number of children per women, whereas it is in non-OECD countries. Perhaps differences in the quality of healthcare lead to better survival rates for children in richer countries, even if a woman has many children.\n\nWe can visualise this.\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder,\n       aes(x = children_per_woman,\n           y = child_mortality,\n           colour = is_oecd)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](popout_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Python\n:::\n\nIt looks like child mortality rates in non-OECD countries are much more variable than in OECD countries. There doesn't appear to be enough spread in the OECD country data to draw conclusions about the OECD countries.\n\nWe've previously seen that life expectancy is poor in sub-Saharan Africa. It would therefore be interesting to investigate if that has anything to do with high levels of child mortality.\n\nTo visualise this we need to colour the data of the sub-Saharan Africa `world_region` a different colour than the rest of the data.\n\nWe can use a similar technique as we did for the OECD countries. We first need to create a column that contains information about whether a country is in sub-Saharan Africa and then colour the data accordingly.\n\nHere we also manually update the colours to increase data discriminability.\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>% \n  mutate(is_sub_saharan_africa = world_region == \"sub_saharan_africa\") %>%\n  ggplot(aes(x = children_per_woman,\n             y = child_mortality,\n             colour = is_sub_saharan_africa)) +\n  geom_point() +\n  scale_colour_manual(values = c(\"grey\", \"firebrick\"))\n```\n\n::: {.cell-output-display}\n![](popout_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Python\n:::\n\n### Exercises\n\n::: {.callout-note icon=false}\n## Income vs life expectancy in South Asia\n\n**Level:** {{< fa solid star >}} {{< fa regular star >}} {{< fa regular star >}}\n\nPlot income (x-axis) against life expectancy for women (y-axis), colouring the data for South Asia differently from the rest of the data. Ensure that there is sufficient contrast between the two groups of data points.\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>% \n  mutate(is_south_asia = world_region == \"south_asia\") %>% \n  ggplot(aes(x = income_per_person,\n         y = life_expectancy_female,\n         colour = is_south_asia)) +\n  geom_point() +\n  scale_colour_manual(values = c(\"grey\", \"firebrick\"))\n```\n\n::: {.cell-output-display}\n![](popout_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Python\n:::\n:::\n:::\n\n::: {.callout-note icon=false}\n## Ordering and emphasising groups\n\n**Level:** {{< fa solid star >}} {{< fa solid star >}} {{< fa regular star >}}\n\nCreate a bar plot that contains the income per person, split by world region.\n\nEnsure that the data is arranged in ascending order (based on average income across each region) and highlight East-Asia Pacific.\n\n::: {.callout-tip collapse=\"true\"}\n## Answer\n\nWe're combining some skills from the ordering/ranking section with the popout.\n\nFirst we need to find the average income for each region, and then colour East-Asia Pacific. To colour the _inside_ of the bar plot we need to use the `fill` instead of the `colour` argument (see what happens if you do use `colour`!).\n\n::: {.panel-tabset group=\"language\"}\n## R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngapminder %>% \n  group_by(world_region) %>% \n  summarise(mean_income = mean(income_per_person)) %>% \n  ungroup() %>% \n  mutate(is_eap = world_region == \"east_asia_pacific\") %>% \n  ggplot(aes(x = fct_reorder(world_region, mean_income),\n             y = mean_income,\n             fill = is_eap)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust=1)) +\n  labs(x = \"World region\", y = \"Mean income\")\n```\n\n::: {.cell-output-display}\n![](popout_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Python\n:::\n:::\n:::\n\n## Key points\n\n::: {.callout-note}\n\n- We can use a popout to emphasise data\n\n:::\n",
    "supporting": [
      "popout_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}